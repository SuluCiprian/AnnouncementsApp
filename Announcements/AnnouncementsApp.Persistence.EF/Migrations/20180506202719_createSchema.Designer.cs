// <auto-generated />
using System;
using AnnouncementsApp.Persistence.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.EntityFrameworkCore.Migrations;

namespace AnnouncementsApp.Persistence.EF.Migrations
{
    [DbContext(typeof(AnnouncementsContext))]
    [Migration("20180506202719_createSchema")]
    partial class createSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-preview2-30571")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AnnouncementsApp.Domain.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CategoryId");

                    b.Property<string>("ConfirmationCode");

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreateDate");

                    b.Property<DateTime>("ExpireDate");

                    b.Property<string>("Location");

                    b.Property<bool>("Status");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("AnnouncementsApp.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descriprion");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("AnnouncementsApp.Domain.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AnnouncementId");

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreateDate");

                    b.HasKey("Id");

                    b.HasIndex("AnnouncementId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("AnnouncementsApp.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AnnouncementsApp.Domain.Announcement", b =>
                {
                    b.HasOne("AnnouncementsApp.Domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("AnnouncementsApp.Domain.Comment", b =>
                {
                    b.HasOne("AnnouncementsApp.Domain.Announcement")
                        .WithMany("Comments")
                        .HasForeignKey("AnnouncementId");
                });
#pragma warning restore 612, 618
        }
    }
}
